name: PR Workflow

on:
  pull_request:
    branches:
      - main

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: always

  linting:
    runs-on: ubuntu-latest
    needs: dependency-review
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Analysing the code with ruff
        run: |
          ruff check --config pyproject.toml $(git ls-files '*.py')

  build:
    runs-on: ubuntu-latest
    needs: linting
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add sample .env file
        run: |
          if [ ! -f env.example ]; then
            echo "Error: .env.example file not found"
            exit 1
          fi
          cp env.example .env || { echo "Error: Failed to copy .env file"; exit 1; }

      - name: Migrate Database and Collect Static
        run: |
          python manage.py makemigrations --noinput || exit 1
          python manage.py migrate --noinput || exit 1
          python manage.py collectstatic --noinput || exit 1

      - name: Run Tests
        run: |
          python manage.py test --noinput || exit 1


  analyze:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['python' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
