name: Main Workflow
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Analysing the code with ruff
        run: |
          ruff check --config pyproject.toml "$(git ls-files '*.py')"

  analyze:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['python' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"

  build:
    runs-on: ubuntu-latest
    needs: analyze

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Add sample .env file
        run: |
          if [ ! -f env.example ]; then
            echo "Error: .env.example file not found"
            exit 1
          fi
          cp env.example .env || { echo "Error: Failed to copy .env file"; exit 1; }

      - name: Migrate Database and Collect Static
        run: |
          python manage.py makemigrations --noinput
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput

      - name: Run Tests
        run: |
          python manage.py test --noinput || exit 1
